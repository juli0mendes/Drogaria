/**
 * Copyright (c) 2016  Brasilcap - www.brasilcap.com.br
 * Todos os direitos reservados.
 * 
 * NÃO ALTERE OU REMOVA AS INFORMAÇÕES DE COPYRIGHT
 * OU AS INFORMAÇÕES CONTIDAS NESTE HEADER
 * 
 * Este código-fonte é de propriedade da Brasilcap Capitalizações S.A.
 * e não pode ser copiado, modificado ou compartilhado sem autorização 
 * prévia, estando sujeito a penalidades judiciais caso ocorra.
 * 
 */
package br.com.juliomendes90.drogaria2.dao;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.List;

import org.junit.Ignore;
import org.junit.Test;

import br.com.juliomendes90.drogaria2.domain.Funcionario;
import br.com.juliomendes90.drogaria2.domain.Pessoa;

/**
 * {Descricao da Classe}
 * 
 * Classe <code>FuncionarioDAOTest</code>.
 * 
 * @author jcmorais
 * @version 1.0 (18/07/2016)
 */
public class FuncionarioDAOTest {

	/**
	 * Salvar.
	 * 
	 * @throws ParseException
	 *             parse exception
	 */
	@Test
	@Ignore
	public void salvar() throws ParseException {
		FuncionarioDAO funcionarioDAO = new FuncionarioDAO();

		Funcionario funcionario = new Funcionario();
		funcionario.setCarteiraTrabalho("00114477225588");
		funcionario.setDataAdmissao(new SimpleDateFormat("dd/MM/yyyy")
				.parse("05/12/2016"));

		PessoaDAO pessoaDAO = new PessoaDAO();
		Pessoa pessoa = pessoaDAO.buscar(1L);

		if (pessoa != null) {
			funcionario.setPessoa(pessoa);

			funcionarioDAO.salvar(funcionario);

			System.out
					.println("Funcionario: "
							+ funcionario.getPessoa().getNome()
							+ " salvo com sucesso!");
		} else {
			System.out
					.println("Não foi possível salvar o funcionário, pois a pessoa informada não existe!");
		}
	}

	/**
	 * Buscar.
	 */
	@Test
	@Ignore
	public void buscar() {
		FuncionarioDAO funcionarioDAO = new FuncionarioDAO();
		Funcionario funcionario = funcionarioDAO.buscar(3L);

		if (funcionario != null) {
			System.out.println("Funcionario encontrado: "
					+ funcionario.getPessoa().getNome());
		} else {
			System.out.println("Funcionario não encontrado!");
		}
	}

	/**
	 * Listar.
	 */
	@Test
	@Ignore
	public void listar() {
		FuncionarioDAO funcionarioDAO = new FuncionarioDAO();
		List<Funcionario> listaFuncionarios = funcionarioDAO.listar();

		System.out.println("Total de fuuncionários: "
				+ listaFuncionarios.size());

		for (Funcionario funcionario : listaFuncionarios) {
			System.out.println("Funcionario: "
					+ funcionario.getPessoa().getNome());
		}
	}

	/**
	 * Excluir.
	 */
	@Test
	@Ignore
	public void excluir() {
		FuncionarioDAO funcionarioDAO = new FuncionarioDAO();
		Funcionario funcionario = funcionarioDAO.buscar(3L);

		if (funcionario != null) {
			System.out.println("Funcionário a ser excluído: "
					+ funcionario.getPessoa().getNome());

			funcionarioDAO.excluir(funcionario);
		} else {
			System.out.println("Funcionário não encontrado!");
		}
	}

	/**
	 * Editar.
	 * 
	 * @throws ParseException
	 *             parse exception
	 */
	@Test
	@Ignore
	public void editar() throws ParseException {
		FuncionarioDAO funcionarioDAO = new FuncionarioDAO();
		Funcionario funcionario = funcionarioDAO.buscar(2L);

		if (funcionario != null) {
			System.out.println("Funcionário a ser editado: "
					+ funcionario.getPessoa().getNome());

			funcionario.setCarteiraTrabalho("000000000000");
			funcionario.setDataAdmissao(new SimpleDateFormat("dd/MM/yyyy")
					.parse("05/12/2016"));

			PessoaDAO pessoaDAO = new PessoaDAO();
			Pessoa pessoa = pessoaDAO.buscar(1L);

			funcionario.setPessoa(pessoa);

			funcionarioDAO.editar(funcionario);

			System.out.println("Funcionário editado: "
					+ funcionario.getPessoa().getNome());
		} else {
			System.out.println("Funcionário não encontrado!");
		}
	}
}
